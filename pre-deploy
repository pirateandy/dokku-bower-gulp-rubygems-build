#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
APP="$1";  IMAGE="dokku/$APP"


RUN=$(cat <<EOF
PATH=$PATH:/app/vendor/node/bin &&
cd /app/static &&

sleep 1

echo '-----> Checking for Ruby Gem deps'
if [ -f "./Gemfile" ]
then
  echo '       Gemfile detected, installing gems...'
  gem install bundler
  bundle install
else
  echo '       No Gemfile present. Skipping...'
fi

sleep 1

echo '-----> Checking for Bower deps'
if [ -f "./bower.json" ]
then
  echo '       bower.json exists, handling deps...'

  if [ -f "./node_modules/bower/bin/bower" ]
  then
    echo '       Bower already installed. Skipping...'
  else
    echo '-----> Installing Bower'
    npm install bower
  fi

  echo '-----> Installing Bower Packages'
  ./node_modules/bower/bin/bower install --allow-root
else
  echo '       bower.json missing. Nothing to install...'
fi

sleep 1
  
echo '-----> Checking for gulp deps'
if [ -f "./gulpfile.js" ]
then
  echo '       gulpfile.js exists, handling deps...'

  if [ -f "./node_modules/gulp/bin/gulp.js" ]
  then
    echo '       gulp already installed. Skipping...'
  else
    echo '-----> Installing gulp'
    npm install gulp
  fi

  echo '-----> Running gulp Tasks'
  ./node_modules/gulp/bin/gulp.js build
else
  echo '       gulpfile.js is missing. No tasks to run...'
fi
EOF
)

id=$(docker run -d $IMAGE /bin/bash -c "$RUN")
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
